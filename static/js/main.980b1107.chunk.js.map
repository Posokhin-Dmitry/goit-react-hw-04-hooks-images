{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","helpers/filterData.js","App.js","Servises/api.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","target","ImageGalleryItem","tags","webformatURL","largeImageURL","onClick","src","alt","ImageGallery","dataImages","onClickImg","map","id","Button","Loader","color","height","width","timeout","Modal","onClose","img","useEffect","window","addEventListener","handleKeydown","removeEventListener","e","code","overlay","document","querySelector","filterData","App","page","setPage","setDataImages","largeImage","setLargeImage","isLoading","setIsLoading","showModal","setShowModal","searchQuery","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","maxPerPage","axios","get","api","then","data","hits","catch","error","console","log","finally","toggleModal","length","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.980b1107.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (query.trim() === '') {\r\n      alert('enter the name of the picture');\r\n    }\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  const handleQuery = event => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleQuery}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ tags, webformatURL, largeImageURL, onClick }) => {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => onClick({ largeImageURL, tags })}\r\n    >\r\n      <img className=\"ImageGalleryItem-image\" src={webformatURL} alt={tags} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  werformatURL: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ dataImages, onClickImg }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {dataImages.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          tags={tags}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onClickImg}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  dataImages: PropTypes.arrayOf(PropTypes.object),\r\n  onClickImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import LoaderSpinner from 'react-loader-spinner';\r\nconst Loader = () => (\r\n  <div>\r\n    <LoaderSpinner\r\n      className=\"loader\"\r\n      type=\"TailSpin\"\r\n      color=\"#3f51b5\"\r\n      height={100}\r\n      width={100}\r\n      timeout={100000}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Modal({ onClose, img }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeydown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleOverlay = e => {\r\n    const overlay = document.querySelector('.Overlay');\r\n    if (e.target === overlay) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleOverlay}>\r\n      <div className=\"Modal\">\r\n        <img src={img.largeImageURL} alt={img.tags} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  img: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","const filterData = dataImages =>\r\n  dataImages.map(({ id, webformatURL, tags, largeImageURL }) => ({\r\n    id,\r\n    webformatURL,\r\n    tags,\r\n    largeImageURL,\r\n  }));\r\n\r\nexport default filterData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as api from './Servises/api';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Button from './components/Button/Button';\r\nimport Loader from './components/Loader/Loader';\r\nimport Modal from './components/Modal/Modal';\r\nimport filterData from './helpers/filterData';\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState(1);\r\n  const [dataImages, setDataImages] = useState([]);\r\n  const [largeImage, setLargeImage] = useState({});\r\n  const [query, setQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const maxPerPage = 12;\r\n\r\n  useEffect(() => {\r\n    if (query === '') {\r\n      return;\r\n    }\r\n    searchQuery(page, query, maxPerPage);\r\n  }, [page, query]);\r\n\r\n  useEffect(() => {\r\n    if (page > 1) {\r\n      setTimeout(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      }, 400);\r\n    }\r\n  }, [page]);\r\n\r\n  const searchQuery = (page, query, maxPerPage) => {\r\n    setIsLoading(true);\r\n    api\r\n      .searchQuery(page, query, maxPerPage)\r\n      .then(({ data }) => {\r\n        setDataImages([...dataImages, ...filterData(data.hits)]);\r\n      })\r\n      .catch(error => console.log(error))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const handleFormSubmit = query => {\r\n    setDataImages([]);\r\n    setPage(1);\r\n    setQuery(query);\r\n  };\r\n\r\n  const handleClickLoadMore = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleClickImg = largeImage => {\r\n    setLargeImage(largeImage);\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {dataImages.length > 0 && (\r\n        <ImageGallery dataImages={dataImages} onClickImg={handleClickImg} />\r\n      )}\r\n      {isLoading && <Loader />}\r\n      {dataImages.length > 11 && <Button onClick={handleClickLoadMore} />}\r\n      {showModal && <Modal img={largeImage} onClose={toggleModal} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\n\r\nconst BASEURL = 'https://pixabay.com/api/';\r\nconst key = '23587360-9e8d8834fc0ca0fd407cdbeb2';\r\n\r\nexport const searchQuery = (page, query, maxPerPage) =>\r\n  axios.get(\r\n    BASEURL +\r\n      `?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${maxPerPage}`,\r\n  );\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}